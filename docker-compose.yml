version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: werewolf-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: werewolf
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - werewolf-network
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # バックエンドAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: werewolf-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/werewolf
    env_file:
      - .env
    volumes:
      - ./logs/backend:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - werewolf-network
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # フロントエンド（React）
  frontend:
    build:
      context: ../werewolf-frontend # フロントエンドリポジトリのパス
      dockerfile: Dockerfile
    container_name: werewolf-frontend
    restart: unless-stopped
    volumes:
      - ./logs/frontend:/var/log/nginx
    depends_on:
      - backend
    networks:
      - werewolf-network
    healthcheck:
      test:
        ['CMD', 'wget', '--quiet', '--tries=1', '--spider', 'http://localhost/']
      interval: 30s
      timeout: 10s
      retries: 3

  # リバースプロキシ（nginx）
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: werewolf-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - werewolf-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local

networks:
  werewolf-network:
    driver: bridge
